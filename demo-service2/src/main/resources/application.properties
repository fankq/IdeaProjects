spring.application.name=demo-service2
eureka.client.serviceUrl.defaultZone=http://fankq:123456@localhost:8761/eureka,http://fankq:123456@localhost:8762/eureka/
eureka.client.healthcheck.enabled=true
# 开启健康检查（需要spring-boot-starter-actuator依赖）
ureka.instance.lease-renewal-interval-in-seconds=60

# 开启健康检查（需要spring-boot-starter-actuator依赖）
eureka.instance.lease-expiration-duration-in-seconds=60
# 续约到期时间（默认90秒）
#########################################
# 自定义使用随机策略，demo-service1是服务应用名
demo-service1.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
##############################################
#熔断器hystrix相关属性设置
feign.hystrix.enabled=true
# 隔离策略，默认值为Thread, 可选Thread｜Semaphore

hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 发生超时是是否中断，默认true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# 命令执行超时时间，默认值为1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
# 执行是否启用超时，默认启用true
hystrix.command.default.execution.timeout.enabled=false
#// 如果并发数达到该设置值，请求会被拒绝和抛出异常并且fallback不会被调用。默认10
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=2
hystrix.command.default.fallback.enabled=true
management.endpoint.health.show-details=always